@{
    ViewData["Title"] = "Home Page";
}

<div class="row">
    <div class="col-md-12">
        <h2>Flower Type predicting</h2>
        <p>
            A quick .NET Core MVC Web app created to predict a flower type based on
            the Length and Width of the flowers pedals
        </p>
        <br />
        <p>
            There are 3 main functions to be aware of:
            <ul>
                <li>
                    1: The data which has Create, Update and Delete ability. You are free to change
                    the data to observe different outcomes.
                    <hr />
                </li>
                <li>
                    2: Training. The train function takes the data from the dataset and with 100,000 iterations
                    tries  to find the minimum values. Right now, the iterations and a training rate of .01 are set values
                    <hr />
                </li>
                <li>
                    3: The prediction. Type in a new pedal length and pedal width and let the system guess based
                    on the calculated weights and bias. Use the graph of current flowers to help confirm the predictions.
                    The result will be either 1 or 0 defining the type we as the accuracy will be a number between 1 or 0 and
                    depending on the type will show how confident  the system is in its prediction. For example, if the type
                    prediction was 1 you might see an accuracy of 0.999338631021747 where as a prediction of 0 you might see
                    an accuracy of 0.000385711713345437 which respectively are very close to their  predictions meaning the
                    system is confident. A not so confident response might look something like 0.694586101835618.
                    <hr />
                </li>
            </ul>
        </p>
        <br />
        <p>
            Todo: 
            <ul>
                <li>
                    1: Add the ability to change the number of iterations and the learning rate.
                </li>
                <li>
                    2: Add a second graph to show where the predicted result lies withing the training data.
                </li>
            </ul>
        </p>
    </div>
</div>
